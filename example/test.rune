factorial = fun(n) {
    if n == 0 then return = 1
    return = n * factorial(n - 1)
}
println(factorial(5)) # Outputs 120

exit()

fibonacci = fun(n) {
    if n <= 1 then return = n
    fibonacci(n - 1) + fibonacci(n - 2)
}
print(fibonacci(10)) # output 55

a = 10

while true {
    a = a -1
    if a <= 0 then break
    if a % 2 == 0 then continue
    println(a)
}

println("Loop finished")

main = fun() {
    println("Hello, World!")
    return = 42
    println("After return")

}

val = main()
println(val)

myvar = "12"

mybool = not 13 # false because 13 is truthy
println(mybool)
mybool = not 0 # true because 0 is falsy
println(mybool)
mybool = not "" # true because "" is falsy
println(mybool)
exit()

assert(myvar == 12, "Oh no, myvar was not 12")

printer = fun(toPrint) {
    println(toPrint)
}

if myvar == 10 then
    printer("then")
elif myvar == 12 then
    printer("elif 12\n")
elif myvar == 11 then
    printer("elif 11")
else printer("else")

while myvar > 0 {
    myvar = myvar  -1
    printer(myvar)
}

if myvar < 0 {
    printer("Is smaller than 0")
} elif myvar > 0 {
    printer("Is biger or than 0")
} else {
    printer("Is exactly 0")
}

bool = not (myvar == 13 || myvar == 12) && true
println(bool)

if true then printer("Nice") else printer("Also nice")

person1 = table{}
person1.name = "John"

person1.sayHello = fun(self) {
    println(self.name)
}
person1.sayHello() # prints: "John"

person2 = new(person1)
person2.name = "Jenny"

person1.sayHello() # prints: "John"
person2.sayHello() # prints: "Jenny"

mytable = table{"key 1": false, "key 2": 10, "key 3": 12.4} # spaces in keys will be removed automatically
println(mytable) # prints: {"key1": false, "key2": 10, "key3": 12.4}
println(mytable["key2"]) # prints: 10
mytable["key2"] = 11
println(mytable["key2"]) # prints: 11
mytable.key2 = 12
println(mytable["key2"]) # prints: 12
println(millis())
wait(1000)
println(millis())